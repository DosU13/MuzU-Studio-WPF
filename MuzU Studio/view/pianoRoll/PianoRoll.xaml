<UserControl
    x:Class="MuzU_Studio.view.PianoRoll"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MuzU_Studio.view"
    xmlns:model="clr-namespace:MuzU_Studio.model"
    xmlns:viewmodel="clr-namespace:MuzU_Studio.viewmodel"
    xmlns:util="clr-namespace:MuzU_Studio.util"
    xmlns:zoomAndPan="clr-namespace:ZoomAndPan;assembly=ZoomAndPan"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    DataContext="{Binding Source={StaticResource Locator},
                          Path=PianoRollViewModel}"
    >
    <UserControl.Resources>
        <System:Double x:Key="PianoKeyWidth">30</System:Double>
        <System:Double x:Key="TimelineHeight">20</System:Double>
        <util:ColorToBrushConverter 
                x:Key="colorToBrushConverter"/>
        <util:VisibilityConverter
                x:Key="visibilityConverter"/>
        <util:GridLengthConverter
                x:Key="gridLengthConverter"/>

        <DataTemplate 
                DataType="{x:Type viewmodel:NoteViewModel}">
            <Grid>
                <Grid
                    MouseDown="Note_MouseDown"
                    MouseUp="Note_MouseUp"
                    MouseMove="Note_MouseMove"
                    HorizontalAlignment="Left"
                    Width="{Binding Width}"
                    Height="{Binding Height}"
                    Visibility="{Binding Parent.Visible, 
                        Converter={StaticResource visibilityConverter}}"
                >
                    <Rectangle
                        Fill="{Binding Parent.Color, 
                            Converter={StaticResource colorToBrushConverter}}"
                        Cursor="Hand"/>
                    <Rectangle
                        Name="Border"
                        Stroke="{Binding BorderColor, 
                            Converter={StaticResource colorToBrushConverter}}"
                        StrokeThickness="10"
                        Cursor="Hand">
                    </Rectangle>
                    <Thumb Height="{Binding Height}"
                           Width="50"
                           Opacity="0"
                           HorizontalAlignment="Right"
                           Cursor="SizeWE"
                           DragDelta="ResizeThumb_DragDelta"/>
                </Grid>
                <TextBlock Text="{Binding LyricsWithoutNewlines, Mode=OneWay}" 
                           Foreground="{Binding Parent.ReverseColor, Mode=OneWay, 
                                Converter={StaticResource colorToBrushConverter}}"
                           Visibility="Collapsed"
                           FontSize="45"
                           HorizontalAlignment="Left"
                           Width="NaN"
                           TextWrapping="NoWrap"
                           Padding="5,0,0,0">
                    <!--Visibility="{Binding Parent.Visible, 
     Converter={StaticResource visibilityConverter}}"-->
                    <TextBlock.RenderTransform>
                        <ScaleTransform
                        ScaleX="{Binding DataContext.PanAndZoomModel.ContentScaleXAspectReverser, Mode=OneWay,
                                            RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                        ScaleY="1"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
            </Grid>
        </DataTemplate>

        <DataTemplate 
                DataType="{x:Type viewmodel:PianoKeyViewModel}">
            <Grid
                    Width="{StaticResource PianoKeyWidth}"
                    Height="{Binding Height}">
                <Rectangle
                    Fill="{Binding FillColor}"
                    />
                <Viewbox>
                    <TextBlock
                        Text="{Binding KeyName}"
                        Foreground="IndianRed"
                        VerticalAlignment="Center"
                        FontWeight="Black"
                        FontSize="15"
                        />
                </Viewbox>
            </Grid>
        </DataTemplate>

        <DataTemplate 
                DataType="{x:Type viewmodel:TimelineItemViewModel}">
            <Grid
                Height="{Binding DataContext.PanAndZoomModel.ContentHeight,
                         RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                Visibility="{Binding LineThickness.Visible, 
                             Converter={StaticResource visibilityConverter}}"                
                >
                <Rectangle Fill="White"     
                           Width="{Binding LineThickness.Value}"/>
                <!--<TextBlock
                    Text="{Binding Time}"
                    Foreground="IndianRed"
                    VerticalAlignment="Center"
                    FontWeight="Black"
                    FontSize="150"
                    />-->
            </Grid>
        </DataTemplate>

        <!-- 
        Override the style of the ListBox to remove the ScrollViewer.
        All we want is ListBox logic but based on a Canvas.
        -->
        <Style x:Key="noScrollViewerListBoxStyle" TargetType="ListBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Canvas 
                            Background="{TemplateBinding Background}"
                            IsItemsHost="True" 
                            />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 
        Override the style of each ListBoxItem to bind Canvas.Left, Canvas.Top and IsSelected.
        -->
        <Style 
            x:Key="listBoxItemStyle" 
            TargetType="ListBoxItem"
            >
            <Setter 
                Property="Canvas.Left" 
                Value="{Binding X}" 
                />
            <Setter 
                Property="Canvas.Top" 
                Value="{Binding Y}" 
                />
            <Setter 
                Property="IsSelected" 
                Value="{Binding IsSelected}" 
                />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid x:Name="mainContainer">
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding Source={StaticResource TimelineHeight},
                                    Converter={StaticResource gridLengthConverter}}"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding Source={StaticResource PianoKeyWidth},
                                Converter={StaticResource gridLengthConverter}}"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <zoomAndPan:ZoomAndPanControl
            Grid.RowSpan="2" Grid.Column="1"
            x:Name="TimelineZoomAndPan"
            ContentHorizontalScale="{Binding PanAndZoomModel.ContentScaleX, Mode=OneWay}"
            ContentOffsetX="{Binding PanAndZoomModel.ContentOffsetX, Mode=TwoWay}"
            ContentViewportWidth="{Binding PanAndZoomModel.ContentViewportWidth, Mode=OneWay}"
            >
            <Grid Width="{Binding PanAndZoomModel.ContentWidth}"
                  Height="{Binding PanAndZoomModel.ContentHeight}">
                <ItemsControl
                    ItemsSource="{Binding PianoRollModel.TimelineItems}"
                    Background="Transparent"
                    >
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding X}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Canvas>
                    <Rectangle Width="{Binding PanAndZoomModel.ContentWidth}"
                               Height="{StaticResource TimelineHeight}"
                               MouseLeftButtonDown="Timeline_MouseLeftButtonDown"
                               Fill="#08FFFFFF"/>
                    <Thumb
                        x:Name="playheadThumb"
                        Width="{Binding PlayheadThumbWidth, Mode=OneWay}" 
                        Height="{Binding Source={StaticResource TimelineHeight}, Mode=OneWay}"
                        Canvas.Top="0"
                        Canvas.Left="{Binding PlayheadThumbLeft, Mode=TwoWay}"
                        DragDelta="PlayheadThumb_DragDelta"
                        >
                        <Thumb.Template>
                            <ControlTemplate 
                            TargetType="{x:Type Thumb}"
                            >
                                <Border 
                                BorderThickness="0"
                                Background="IndianRed"
                                CornerRadius="1"                                        
                                />
                            </ControlTemplate>
                        </Thumb.Template>
                    </Thumb>
                    <Rectangle
                        x:Name="playhead"
                        Fill="IndianRed"
                        Width="{Binding PlayheadWidthInPianoRoll, Mode=OneWay}" 
                        Height="{Binding PanAndZoomModel.ContentHeight, Mode=OneWay}"
                        Canvas.Top="0"
                        Canvas.Left="{Binding AudioService.PlayheadPosition, Mode=OneWay}"
                        />
                </Canvas>
            </Grid>
        </zoomAndPan:ZoomAndPanControl>
        <zoomAndPan:ZoomAndPanControl
            Grid.Row="1" Grid.Column="0"
            x:Name="PianoKeysZoomAndPan"
            ContentVerticalScale="{Binding PanAndZoomModel.ContentScaleY, Mode=OneWay}"
            ContentOffsetY="{Binding PanAndZoomModel.ContentOffsetY, Mode=TwoWay}"
            >
            <Grid
                Width="{StaticResource PianoKeyWidth}"
                Height="{Binding PanAndZoomModel.ContentHeight, Mode=OneWay}">
                <ItemsControl
                    ItemsSource="{Binding PianoRollModel.PianoKeys}"
                    Background="Transparent"
                    >
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Top" Value="{Binding Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </zoomAndPan:ZoomAndPanControl>
        <ScrollViewer x:Name="scroller"
                      Grid.Row="1" Grid.Column="1"
                      CanContentScroll="True"
                      VerticalScrollBarVisibility="Visible"
                      HorizontalScrollBarVisibility="Visible"
                      KeyDown="zoomAndPanControl_KeyDown"
                      >
            <zoomAndPan:ZoomAndPanControl
                x:Name="zoomAndPanControl"
                ContentHorizontalScale="{Binding PanAndZoomModel.ContentScaleX, Mode=TwoWay}"
                ContentVerticalScale="{Binding PanAndZoomModel.ContentScaleY, Mode=TwoWay}"
                ContentOffsetX="{Binding PanAndZoomModel.ContentOffsetX, Mode=TwoWay}"
                ContentOffsetY="{Binding PanAndZoomModel.ContentOffsetY, Mode=TwoWay}"
                ContentViewportWidth="{Binding PanAndZoomModel.ContentViewportWidth, Mode=OneWayToSource}"
                ContentViewportHeight="{Binding PanAndZoomModel.ContentViewportHeight, Mode=OneWayToSource}"
                MouseDown="zoomAndPanControl_MouseDown"
                MouseUp="zoomAndPanControl_MouseUp"
                MouseMove="zoomAndPanControl_MouseMove"
	            MouseWheel="zoomAndPanControl_MouseWheel"
                KeyDown="zoomAndPanControl_KeyDown"
                >
                <Grid x:Name="content" 
                      Width="{Binding PanAndZoomModel.ContentWidth}" 
                      Height="{Binding PanAndZoomModel.ContentHeight}"
                      SizeChanged="pianoRoll_SizeChanged"
                      >
                    <ListBox 
                        ItemsSource="{Binding Notes}"
                        Background="Transparent"
                        Style="{StaticResource noScrollViewerListBoxStyle}"
                        ItemContainerStyle="{StaticResource listBoxItemStyle}"
                        />
                    <!--<ItemsControl
                        ItemsSource="{Binding Lines}"
                        />-->
                </Grid>
            </zoomAndPan:ZoomAndPanControl>
        </ScrollViewer>
    </Grid>
</UserControl>
